/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AdminLog as PrismaAdminLog } from "@prisma/client";

export class AdminLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AdminLogCountArgs, "select">): Promise<number> {
    return this.prisma.adminLog.count(args);
  }

  async adminLogs(
    args: Prisma.AdminLogFindManyArgs
  ): Promise<PrismaAdminLog[]> {
    return this.prisma.adminLog.findMany(args);
  }
  async adminLog(
    args: Prisma.AdminLogFindUniqueArgs
  ): Promise<PrismaAdminLog | null> {
    return this.prisma.adminLog.findUnique(args);
  }
  async createAdminLog(
    args: Prisma.AdminLogCreateArgs
  ): Promise<PrismaAdminLog> {
    return this.prisma.adminLog.create(args);
  }
  async updateAdminLog(
    args: Prisma.AdminLogUpdateArgs
  ): Promise<PrismaAdminLog> {
    return this.prisma.adminLog.update(args);
  }
  async deleteAdminLog(
    args: Prisma.AdminLogDeleteArgs
  ): Promise<PrismaAdminLog> {
    return this.prisma.adminLog.delete(args);
  }
}
