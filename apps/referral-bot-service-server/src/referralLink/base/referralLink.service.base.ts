/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ReferralLink as PrismaReferralLink } from "@prisma/client";

export class ReferralLinkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReferralLinkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.referralLink.count(args);
  }

  async referralLinks(
    args: Prisma.ReferralLinkFindManyArgs
  ): Promise<PrismaReferralLink[]> {
    return this.prisma.referralLink.findMany(args);
  }
  async referralLink(
    args: Prisma.ReferralLinkFindUniqueArgs
  ): Promise<PrismaReferralLink | null> {
    return this.prisma.referralLink.findUnique(args);
  }
  async createReferralLink(
    args: Prisma.ReferralLinkCreateArgs
  ): Promise<PrismaReferralLink> {
    return this.prisma.referralLink.create(args);
  }
  async updateReferralLink(
    args: Prisma.ReferralLinkUpdateArgs
  ): Promise<PrismaReferralLink> {
    return this.prisma.referralLink.update(args);
  }
  async deleteReferralLink(
    args: Prisma.ReferralLinkDeleteArgs
  ): Promise<PrismaReferralLink> {
    return this.prisma.referralLink.delete(args);
  }
}
