/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Verification as PrismaVerification } from "@prisma/client";

export class VerificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VerificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.verification.count(args);
  }

  async verifications(
    args: Prisma.VerificationFindManyArgs
  ): Promise<PrismaVerification[]> {
    return this.prisma.verification.findMany(args);
  }
  async verification(
    args: Prisma.VerificationFindUniqueArgs
  ): Promise<PrismaVerification | null> {
    return this.prisma.verification.findUnique(args);
  }
  async createVerification(
    args: Prisma.VerificationCreateArgs
  ): Promise<PrismaVerification> {
    return this.prisma.verification.create(args);
  }
  async updateVerification(
    args: Prisma.VerificationUpdateArgs
  ): Promise<PrismaVerification> {
    return this.prisma.verification.update(args);
  }
  async deleteVerification(
    args: Prisma.VerificationDeleteArgs
  ): Promise<PrismaVerification> {
    return this.prisma.verification.delete(args);
  }
}
